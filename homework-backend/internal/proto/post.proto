syntax = "proto3";

package proto;

option go_package="./proto";

import "google/api/annotations.proto";

service PostService {
    rpc PostCreate(PostCreateRequest) returns (PostCreateResponse){
        option (google.api.http) = {
            post: "/post/create"
            body: "*" 
        };
    };
    rpc PostUpdate(PostUpdateRequest) returns(PostMainResponse){
        option (google.api.http) = {
            put: "/post/update"
            body: "*"            
        };
    };
    rpc PostDelete(PostMainRequest) returns(PostMainResponse){
        option (google.api.http) = {
            delete: "/post/delete/{post_id}"            
        };
    };
    rpc PostGet(PostMainRequest) returns(PostGetResponse){
        option (google.api.http) = {
            get: "/post/get/{post_id}"            
        };
    };

    rpc PostFeed(PostFeedRequest) returns(PostFeedResponse){
        option (google.api.http) = {
            get: "/post/feed"                        
        };
    };

    rpc FriendSet(FriendRequest) returns (FriendResponse){
        option (google.api.http) = {
            put: "/friend/set/{friend_id}"                        
        };
    };

    rpc FriendDelete(FriendRequest) returns(FriendResponse){
        option (google.api.http) = {
            put: "/friend/delete/{friend_id}"                        
        };
    };
}


message PostCreateRequest {
    string user_id = 1;
    string text = 2;
}

message PostCreateResponse {
    uint32 status = 1;
    string message = 2;
    string post_id = 3;    
}

message PostUpdateRequest {
    string post_id = 1;
    string text = 2;
}

message PostMainResponse{
    uint32 status = 1;
    string message = 2;
}

message PostMainRequest {
    string post_id = 1;    
}

message PostGetResponse {
    uint32 status = 1;
    string message = 2;
    Post post = 3;
}

message Post {
    string user_id = 1;
    string text = 2;
    string post_id = 3;
}

message PostFeedRequest {
    // Оффсет с которого начинать выдачу
    uint32 offset = 1;
    // Лимит, ограничивающий кол-во возвращенных сущностей
    uint32 limit = 2;

    string user_id = 3;
    
}

message PostFeedResponse{
    // Успешно получены посты друзей
    uint32 status = 1;
    string message = 2;
    // Полученные посты друзей
    repeated Post posts = 3;
}

message FriendRequest{
    string user_id = 1;
    string friend_id = 2;
}

message FriendResponse {
    uint32 status = 1;
    string message = 2;
}